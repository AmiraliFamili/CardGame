In our first meeting we discussed for 1 hour regarding how to approach the game so that it would run with a round robin fashion 
after we started to work on the code separately we noticed that we should make the project in a way that players play the game 
simultaneously (in parallel) therefore we should have made a thread for each player and communicate among them ... 


what strategy we used for development : navigator / driver -> V model 
-- problem with synchronization and parallel : if everything is in a synchronized block is it running in parallel ? 
-- problem with round robin : how can players play simultaneously and the game is played in round robin fashion 
-- can we only use threads to make the project run in round robin ? 
-- what time slice should we use to avoid slow programs and avoid collisions 
-- why V model ? 


we should mention the problems we had i had to struggle with the main game class and extracting the correct 
    output from the main pack as well as making the entire game parallel in a round robin fashion and in a way that 
    their threads wouldn't interrupt each other and i had some problems with race condition as well, there was times when it was 
    a players turn but their left deck was empty and they had to wait for the shared resources to be freed (or filled) again so that 
    they could play their turn ... 

hey kaylum , please write some problems you had to face as both a designer and as a developer, i wrote some of mine as an example 
we have to start with the report as well as test methods we don't have much time left either.



